---

#### Defensive Programming
# https://github.com/openshift/openshift-ansible/blob/master/docs/best_practices_guide.adoc

## disable firwall useful in development setup
- name: Disable firewall
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: disable_firewall
  tags:
    - jboss_datagrid
    - firewall

- name: Fail for Missing Transfer Method
  fail: msg="This role requires transfer_method to be set and non empty. See the README"
  when: transfer_method is not defined or transfer_method == ''
  tags:
    - jboss_datagrid

- name: Fail for Missing Red Hat Network Username
  fail: msg="This role requires rhn_username to be set and non empty."
  when: transfer_method == 'csp-to-host' and (rhn_username is not defined or rhn_username == '')
  tags:
    - jboss_datagrid

- name: Fail for Missing Red Hat Network Password
  fail: msg="This role requires rhn_password to be set and non empty."
  when: transfer_method == 'csp-to-host' and (rhn_password is not defined or rhn_password == '')
  tags:
    - jboss_datagrid

#### Set Facts
- name: Set JBoss EAP Download Facts
  set_fact:
    jboss_datagrid_artifact_url: "{{ jboss_datagrid_artifact_source }}"
    jboss_datagrid_artifact_dl_dest: "{{ '/tmp/' + jboss_datagrid_artifact_name }}"
    jboss_datagrid_library_dest: "/opt/{{ jboss_datagrid_user }}"
  tags:
    - jboss_datagrid

- name: Set JBoss EAP Group Facts
  set_fact:
    jboss_datagrid_group: "{{ jboss_datagrid_user }}"
  tags:
    - jboss_datagrid

##
# The version compare allows to decide what version of EAP that is provisioned and
# use the appropriate init.d scripts and init.d configuraitons
# In EAP6 its jboss-as-[standalone|domain].sh and jboss-as.conf respectively
# In EAP7 its jboss-eap-rhel.sh and jboss-eap.conf respectively
##
- name: Set JBoss JDG Service Directories Facts
  set_fact:
    jboss_datagrid_home: "{{ jboss_datagrid_library_dest }}/jboss-datagrid-{{jboss_datagrid_base_version}}-server"
    jboss_datagrid_service_conf_dir: "/etc/{{ (jboss_datagrid_base_version | version_compare('7.0','<')) | ternary(jboss_datagrid_user,'default')}}"
    jboss_datagrid_service_log_dir: "/var/log/{{ jboss_datagrid_user }}"
    jboss_datagrid_service_data_dir: "/var/run/{{ jboss_datagrid_user }}"
  tags:
    - jboss_datagrid

- name: Set JBoss JDG Service Files Facts
  set_fact:
    jboss_datagrid_service_conf_file: "{{ jboss_datagrid_service_conf_dir }}/{{ (jboss_datagrid_base_version | version_compare('7.0','<')) | ternary('jboss-as.conf','jboss-eap.conf')}}"
    jboss_datagrid_bin_dir: "{{ jboss_datagrid_home }}/bin"
    jboss_datagrid_runtime_conf_file: "{{ jboss_datagrid_home }}/bin/standalone.conf"
    jboss_datagrid_service_file: "{{ (jboss_datagrid_base_version | version_compare('7.0','<')) | ternary('jboss-as-'+jboss_datagrid_mode+'.sh','jboss-eap-rhel.sh')}}"
  tags:
    - jboss_datagrid

##
# RHEL 6 expects init.d service with extension
##
- name: Set JBoss JDG Service Name EL 6
  set_fact:
    jboss_datagrid_service_name: "{{jboss_datagrid_service_file}}"
  when: (ansible_distribution_major_version | version_compare('6','<='))
  tags:
    - jboss_datagrid

##
# RHEL 7 expects init.d service without extension
##
- name: Set JBoss JDG Service Name EL 7
  set_fact:
    jboss_datagrid_service_name: "{{jboss_datagrid_service_file | splitext | first }}"
  when: (ansible_distribution_major_version | version_compare('7','>='))
  tags:
    - jboss_datagrid

- debug: msg="JDG HOME {{ jboss_datagrid_home }} and Service file {{jboss_datagrid_service_file}}  Service Name {{jboss_datagrid_service_name}}"

#### Create Service Account

- include: jboss_service.yml

#### Defensive Programming To Check If EAP Is Already Installed

- name: Check Existence of Libraries
  become: true
  stat:
    path: "{{ jboss_datagrid_library_dest + '/jboss-eap-6.4/version.txt'}}"
  register: jboss_datagrid_exists
  tags:
    - jboss_datagrid

- name: Async Download JBoss Data Grid from Red Hat Customer Portal
  redhat_csp_download:
    url: "{{ jboss_datagrid_artifact_url }}"
    dest: "{{ jboss_datagrid_artifact_dl_dest }}"
    username: "{{ rhn_username }}"
    password: "{{ rhn_password }}"
  async: 7200
  poll: 0
  register: jboss_datagrid_download
  tags:
    - jboss_datagrid
  when: transfer_method == 'csp-to-host' and jboss_datagrid_exists.stat.exists == false

- name: 'Check On JBoss EAP Download Completion'
  async_status: jid={{ jboss_datagrid_download.ansible_job_id }}
  register: job_result1
  until: job_result1.finished
  retries: 600
  delay: 10
  tags:
    - jboss_datagrid
  when: transfer_method == 'csp-to-host' and jboss_datagrid_exists.stat.exists == false

- name: Copy JBoss DataGrid
  copy:
    src: "{{ jboss_datagrid_artifact_name }}"
    dest: "{{ jboss_datagrid_artifact_dl_dest }}"
  tags:
    - jboss_datagrid
  when: transfer_method == 'copy-from-controller' and jboss_datagrid_exists.stat.exists == false

- name: Extract JBoss DataGrid Libraries
  become: true
  unarchive:
    src: "{{ jboss_datagrid_artifact_dl_dest }}"
    dest: "{{ jboss_datagrid_library_dest }}"
    creates: "jboss-datagrid-{{jboss_datagrid_base_version}}-server"
    copy: no
    owner: "{{ jboss_datagrid_user }}"
    group: "{{ jboss_datagrid_group }}"
  tags:
    - jboss_datagrid
  when: jboss_datagrid_exists.stat.exists == false

## Copy jboss-as-{{jboss_datagrid_mode}}.sh or jboss-eap-rhel.sh file to /etc/init.d
- name: Copy JBoss EAP Service File
  become: true
  copy:
    src: "{{jboss_datagrid_bin_dir}}/init.d/{{jboss_datagrid_service_file}}"
    dest: /etc/init.d
    remote_src: True
    owner: "{{ jboss_datagrid_user }}"
    group: "{{ jboss_datagrid_group }}"
    mode: "755"
  notify:
    - Restart jboss datagrid Service
    - Verify jboss datagrid is running
  tags:
    - jboss_datagrid

- name: Add jboss datagrid Service
  become: true
  command: "chkconfig --add {{jboss_datagrid_service_file}}"
  tags:
    - jboss_datagrid

- name: Enable jboss datagrid Service
  become: true
  service:
    name: "{{jboss_datagrid_service_file}}"
    enabled: yes
  tags:
    - jboss_datagrid

#### Set Sensible Defaults For Runtime

## Configure JDG
- include: jdg_config.yml


